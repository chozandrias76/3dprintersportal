{"version":3,"file":null,"sources":["../src/matchPath.js","../src/matchRoute.js","../src/resolve.js","../src/main.js"],"sourcesContent":["/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport toRegExp from 'path-to-regexp';\n\nconst cache = new Map();\n\nfunction decodeParam(val) {\n  if (val === undefined || val === '') {\n    return val;\n  }\n\n  try {\n    return decodeURIComponent(val);\n  } catch (err) {\n    return val;\n  }\n}\n\nfunction matchPathBase(end, routePath, urlPath, parentParams) {\n  const key = `${routePath}|${end}`;\n  let regexp = cache.get(key);\n\n  if (!regexp) {\n    const keys = [];\n    regexp = { pattern: toRegExp(routePath, keys, { end }), keys };\n    cache.set(key, regexp);\n  }\n\n  const m = regexp.pattern.exec(urlPath);\n\n  if (!m) {\n    return null;\n  }\n\n  const path = m[0];\n  const params = Object.create(null);\n  if (parentParams) {\n    Object.assign(params, parentParams);\n  }\n\n  for (let i = 1; i < m.length; i += 1) {\n    params[regexp.keys[i - 1].name] = decodeParam(m[i]);\n  }\n\n  return { path: path === '' ? '/' : path, keys: regexp.keys.slice(), params };\n}\n\nexport const matchPath = matchPathBase.bind(undefined, true);\nexport const matchBasePath = matchPathBase.bind(undefined, false);\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport { matchPath, matchBasePath } from './matchPath';\n\nfunction* matchRoute(route, baseUrl, path, parentParams) {\n  let match;\n\n  if (!route.children) {\n    match = matchPath(route.path, path, parentParams);\n\n    if (match) {\n      yield {\n        route,\n        baseUrl,\n        path: match.path,\n        keys: match.keys,\n        params: match.params,\n      };\n    }\n  }\n\n  if (route.children) {\n    match = matchBasePath(route.path, path, parentParams);\n\n    if (match) {\n      yield {\n        route,\n        baseUrl,\n        path: match.path,\n        keys: match.keys,\n        params: match.params,\n      };\n\n      for (let i = 0; i < route.children.length; i += 1) {\n        const newPath = path.substr(match.path.length);\n        yield* matchRoute(\n          route.children[i],\n          baseUrl + (match.path === '/' ? '' : match.path),\n          newPath.startsWith('/') ? newPath : `/${newPath}`,\n          match.params\n        );\n      }\n    }\n  }\n}\n\nexport default matchRoute;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport matchRoute from './matchRoute';\n\nasync function resolve(routes, pathOrContext) {\n  const context = typeof pathOrContext === 'string' || pathOrContext instanceof String\n    ? { path: pathOrContext }\n    : pathOrContext;\n  const root = Array.isArray(routes) ? { path: '/', children: routes } : routes;\n  let result = null;\n  let value;\n  let done = false;\n\n  const match = matchRoute(root, '', context.path);\n\n  async function next() {\n    ({ value, done } = match.next());\n\n    if (!value || done || (result !== null && result !== undefined)) {\n      return result;\n    }\n\n    if (value.route.action) {\n      const newContext = Object.assign({}, context, value);\n      result = await value.route.action(newContext, newContext.params);\n    }\n\n    return await next();\n  }\n\n  context.next = next;\n\n  await next();\n\n  if (result === null || result === undefined) {\n    const error = new Error('Page not found');\n    error.status = error.statusCode = 404;\n    throw error;\n  }\n\n  return result;\n}\n\nexport default resolve;\n","/**\n * Universal Router (https://www.kriasoft.com/universal-router/)\n *\n * Copyright © 2015-2016 Konstantin Tarkus, Kriasoft LLC. All rights reserved.\n *\n * This source code is licensed under the Apache 2.0 license found in the\n * LICENSE.txt file in the root directory of this source tree.\n */\n\nimport resolve from './resolve';\n\nexport { resolve };\nexport default { resolve };\n"],"names":["cache","decodeParam","val","undefined","decodeURIComponent","err","matchPathBase","end","routePath","urlPath","parentParams","key","regexp","get","keys","pattern","toRegExp","set","m","exec","path","params","i","length","name","slice","matchPath","bind","matchBasePath","matchRoute","route","baseUrl","children","match","substr","newPath","startsWith","routes","pathOrContext","next","value","done","result","action","context","newContext","String","Array","isArray","root","Error","status","error","statusCode","resolve"],"mappings":"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"}